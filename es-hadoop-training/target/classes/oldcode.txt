ckage com.statefarm.es_hadoop;
import java.io.IOException;
import java.util.Iterator;

import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.MapWritable;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapred.MapReduceBase;
import org.apache.hadoop.mapred.OutputCollector;
import org.apache.hadoop.mapred.Reducer;
import org.apache.hadoop.mapred.Reporter;
//import org.apache.hadoop.mapreduce.Reducer;

// public class StubReducer extends Reducer<Text, LongWritable, Text, LongWritable> {
public class StubReducer extends MapReduceBase 
	implements Reducer<Text,LongWritable, NullWritable, MapWritable> {

	// Reducer<Text, LongWritable, Text, MapWritable>
  private LongWritable result = new LongWritable();
	
  public void reduce(Text key, 
		  			 Iterator<LongWritable> values, 
		  			 OutputCollector<NullWritable, MapWritable> output, 
		  			 Reporter reporter) throws IOException {	
  
//  public void reduce(Object key, Iterator<LongWritable> values, OutputCollector output, Reporter reporter) 
//		  throws IOException {

//  @Override
//  public void reduce(Text key, Iterable<LongWritable> values, Context context)
//  @Override
//  public void reduce(Text key, 
//		  			 Iterator<LongWritable> values, 
	  
//		  			 OutputCollector<NullWritable, MapWritable> output, 
//		  			 Reporter reporter) throws IOException {
//  @Override
//  public void reduce(Text key, Iterable<LongWritable> values, OutputCollector output, Reporter reporter)
//      throws IOException, InterruptedException {

	  long sum = 0;
//	  
//	  for (LongWritable value : values) {
//		  sum += value.get();
//	  }
//	  
//	  result.set(sum);
//	  
//	  MapWritable doc = new MapWritable();
//	  
//	  doc.put(new Text("word"), key);
//	  doc.put(new Text("count"), result);
	 
//	  context.write(NullWritable.get(), doc);
	  
	  // context.write(key, result);
  }

}
